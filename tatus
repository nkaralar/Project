[1mdiff --git a/src/ChunkInfo.java b/src/ChunkInfo.java[m
[1mindex 7153db1..5248f30 100644[m
[1m--- a/src/ChunkInfo.java[m
[1m+++ b/src/ChunkInfo.java[m
[36m@@ -1,40 +1,33 @@[m
 [m
 [m
 public class ChunkInfo extends SCTPReader {[m
[32m+[m	[32mprivate static int SIZE = 2;[m
 	private static byte chunkType, chunkFlag;[m
[32m+[m	[32mprivate static byte[] chunkLength;[m
 [m
[31m-	public static void determineChunkInfo(int pointer) {[m
[31m-		byte[] chunkLength = new byte[2];[m
[31m-		byte[] initiateTag = new byte[4];[m
[32m+[m	[32mpublic static int determineChunkInfo(int pointer) {[m
[32m+[m		[32mchunkLength = new byte[SIZE];[m
 		determineTypeAndFlag(pointer);[m
 		determineChunkLength(pointer, chunkLength);[m
[31m-		determineInitiateTag(pointer, initiateTag);[m
[32m+[m		[32mpointer += 16; // chunk length = 16 (it will be changed..)[m
[32m+[m		[32mreturn pointer;[m
 	}[m
 [m
 	// determines chunk type and flag[m
 	private static void determineTypeAndFlag(int pointer) {[m
[31m-		//pointer is 12 (chunk type position)[m
[32m+[m		[32m// pointer is 12 (chunk type position)[m
 		chunkType = bytes[pointer];[m
 		chunkFlag = bytes[pointer + 1];[m
 	}[m
 [m
 	private static void determineChunkLength(int pointer, byte[] chunkLength) {[m
 		int j = 0;[m
[31m-		//position of chunk length is pointer+2 and its size is 2[m
[32m+[m		[32m// position of chunk length is pointer+2 and its size is 2[m
 		for (int i = pointer + 2; i < pointer + 4; i++) {[m
 			chunkLength[j] = bytes[i];[m
 			j++;[m
 		}[m
 	}[m
[31m-	[m
[31m-	//position of initiate tag is pointer+4 and its size is 4[m
[31m-	private static void determineInitiateTag(int pointer, byte[] initiateTag) {[m
[31m-		int j = 0;[m
[31m-		for (int i = pointer + 4; i < pointer + 8; i++) {[m
[31m-			initiateTag[j] = bytes[i];[m
[31m-			j++;[m
[31m-		}[m
[31m-	}[m
 [m
 	public static byte getChunkType() {[m
 		return chunkType;[m
[36m@@ -44,4 +37,7 @@[m [mpublic class ChunkInfo extends SCTPReader {[m
 		return chunkFlag;[m
 	}[m
 [m
[32m+[m	[32mpublic static byte[] getChunkLength() {[m
[32m+[m		[32mreturn chunkLength;[m
[32m+[m	[32m}[m
 }[m
[1mdiff --git a/src/ChunkInfoBytes.java b/src/ChunkInfoBytes.java[m
[1mdeleted file mode 100644[m
[1mindex 9599978..0000000[m
[1m--- a/src/ChunkInfoBytes.java[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-[m
[31m-[m
[31m-public class ChunkInfoBytes {[m
[31m-	[m
[31m-}[m
[1mdiff --git a/src/Client.java b/src/Client.java[m
[1mindex 925c72b..829cac0 100644[m
[1m--- a/src/Client.java[m
[1m+++ b/src/Client.java[m
[36m@@ -93,7 +93,6 @@[m [mpublic class Client {[m
 		} catch (FileNotFoundException e) {[m
 			e.printStackTrace();[m
 		}[m
[31m-[m
 	}[m
 [m
 }[m
[1mdiff --git a/src/PortInfoBytes.java b/src/PortInfoBytes.java[m
[1mdeleted file mode 100644[m
[1mindex ed6ef09..0000000[m
[1m--- a/src/PortInfoBytes.java[m
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-[m
[31m-[m
[31m-import java.io.InputStream;[m
[31m-[m
[31m-public class PortInfoBytes extends SCTPReader {[m
[31m-	private static int HEX_BYTE_NUM = 2;[m
[31m-	private byte[] sourcePort, destinationPort;[m
[31m-	[m
[31m-	public PortInfoBytes(InputStream input) {[m
[31m-		initialize();[m
[31m-		determinePorts();[m
[31m-	}[m
[31m-[m
[31m-	private void initialize() {[m
[31m-		sourcePort = new byte [HEX_BYTE_NUM];[m
[31m-		destinationPort = new byte[HEX_BYTE_NUM];[m
[31m-		[m
[31m-	}[m
[31m-[m
[31m-	private void determinePorts() {[m
[31m-		for (int i = 0; i < sourcePort.length; i++) {[m
[31m-			sourcePort[i] = bytes [i];[m
[31m-			destinationPort[i] = bytes [i+2];[m
[31m-		}[m
[31m-[m
[31m-		[m
[31m-	}[m
[31m-	[m
[31m-}[m
[1mdiff --git a/src/SCTPReader.java b/src/SCTPReader.java[m
[1mindex a1288bd..6a9035d 100644[m
[1m--- a/src/SCTPReader.java[m
[1m+++ b/src/SCTPReader.java[m
[36m@@ -13,8 +13,9 @@[m [mpublic class SCTPReader {[m
 		int positionPointer = 0;[m
 		// changes position with respect to its message size[m
 		positionPointer = PortInfo.determinePorts(positionPointer);[m
[31m-		// added 8 because did not consider verification tag and checksum[m
[31m-		ChunkInfo.determineChunkInfo(positionPointer + 8);[m
[32m+[m		[32m// added 8 because verification tag and checksum are not considered[m
[32m+[m		[32mpositionPointer = ChunkInfo.determineChunkInfo(positionPointer + 8);[m
[32m+[m		[32mIsdnInfo.determineIsdnInfo(positionPointer);[m
 	}[m
 [m
 	// reads stream as hex string[m
[1mdiff --git a/src/Server.java b/src/Server.java[m
[1mindex 1735d29..810955b 100644[m
[1m--- a/src/Server.java[m
[1m+++ b/src/Server.java[m
[36m@@ -23,6 +23,7 @@[m [mpublic class Server {[m
 [m
 		// creates a thread in order to connect multiple clients[m
 		new Thread(new ConnectionHandler(serverSocket)).start();[m
[32m+[m[41m		[m
 	}[m
 [m
 }[m
